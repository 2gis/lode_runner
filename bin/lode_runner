#!/usr/bin/env python

from nose.core import TextTestResult, TextTestRunner, TestProgram, run


class LodeTestResult(TextTestResult):
    def printErrorList(self, flavour, errors):
        unicode_escaped_errors = []
        for test, _err in errors:
            try:
                error_str = str(_err)
            except UnicodeEncodeError:
                error = unicode(_err)
            else:
                # 'ignore': ignore malformed data and continue decoding without further notice
                error = error_str.decode(encoding='unicode-escape', errors='ignore')
            unicode_escaped_errors.append((test, error))
        super(LodeTestResult, self).printErrorList(flavour, unicode_escaped_errors)


class LodeRunner(TextTestRunner):
    def _makeResult(self):
        # return LodeTestResult(
        return LodeTestResult(
            self.stream,
            self.descriptions,
            # TODO: make custom output and then set verbosity 0
            self.verbosity,
            self.config
        )


class LodeProgram(TestProgram):
    def runTests(self):
        self.testRunner = LodeRunner(
            stream=self.config.stream,
            verbosity=self.config.verbosity,
            config=self.config)

        super(LodeProgram, self).runTests()


if __name__ == '__main__':
    LodeProgram()
